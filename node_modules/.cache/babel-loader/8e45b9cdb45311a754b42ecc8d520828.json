{"ast":null,"code":"var _jsxFileName = \"E:\\\\New folder (6)\\\\shtock\\\\src\\\\components\\\\StockList\\\\StockList.jsx\";\nimport React, { useEffect } from \"react\";\nimport Select from \"../Select/Select\";\nimport StockListItem from \"./StockListItem/StockListItem\";\nimport { sortStocksByDividendYield, sortStocksByCompoundedYield } from \"../../helpers\";\nimport styles from \"./StockList.module.css\";\nconst StockList = _ref => {\n  let {\n    stocks,\n    setStocks\n  } = _ref;\n  useEffect(() => {\n    setStocksByDividendYieldCurrentYear();\n  }, []);\n  const renderListItems = () => {\n    return stocks.map(stock => /*#__PURE__*/React.createElement(StockListItem, {\n      stock: stock,\n      key: stock.ticker,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }));\n  };\n  const getOptions = () => {\n    return [{\n      displayValue: \"Highest dividend yield 2020\",\n      value: \"dividendyieldcurrentyear\"\n    }, {\n      displayValue: \"Highest dividend yield overall\",\n      value: \"dividendyieldoverall\"\n    }];\n  };\n  const setStocksByDividendYieldOverall = () => {\n    const sorted = sortStocksByCompoundedYield(stocks);\n    setStocks(sorted);\n  };\n  const setStocksByDividendYieldCurrentYear = () => {\n    const sorted = sortStocksByDividendYield(stocks);\n    setStocks(sorted);\n  };\n  const onSelectChange = e => {\n    const descriptor = e.target.value;\n    if (descriptor === \"dividendyieldoverall\") {\n      setStocksByDividendYieldOverall();\n    } else if (descriptor === \"dividendyieldcurrentyear\") {\n      setStocksByDividendYieldCurrentYear();\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: styles.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Oslo Exchange\"), /*#__PURE__*/React.createElement(Select, {\n    options: getOptions(),\n    onChange: onSelectChange,\n    className: styles.select,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.listContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.listHeaders,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.nameHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.tickerHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"Ticker\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.askHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"Ask\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.bidHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Bid\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.dpsHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"Dividend p/s\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.dpspentHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"Dividend per 1000 spent\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.peHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"P/E\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.sectorHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"Sector\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: styles.stockList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, renderListItems())));\n};\nexport default StockList;","map":{"version":3,"names":["React","useEffect","Select","StockListItem","sortStocksByDividendYield","sortStocksByCompoundedYield","styles","StockList","_ref","stocks","setStocks","setStocksByDividendYieldCurrentYear","renderListItems","map","stock","createElement","key","ticker","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","getOptions","displayValue","value","setStocksByDividendYieldOverall","sorted","onSelectChange","e","descriptor","target","className","container","header","heading","options","onChange","select","listContainer","listHeaders","nameHeader","tickerHeader","askHeader","bidHeader","dpsHeader","dpspentHeader","peHeader","sectorHeader","stockList"],"sources":["E:/New folder (6)/shtock/src/components/StockList/StockList.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\n\r\nimport Select from \"../Select/Select\";\r\nimport StockListItem from \"./StockListItem/StockListItem\";\r\n\r\nimport {\r\n  sortStocksByDividendYield,\r\n  sortStocksByCompoundedYield,\r\n} from \"../../helpers\";\r\n\r\nimport styles from \"./StockList.module.css\";\r\n\r\nconst StockList = ({ stocks, setStocks }) => {\r\n  useEffect(() => {\r\n    setStocksByDividendYieldCurrentYear();\r\n  }, []);\r\n\r\n  const renderListItems = () => {\r\n    return stocks.map((stock) => (\r\n      <StockListItem stock={stock} key={stock.ticker} />\r\n    ));\r\n  };\r\n\r\n  const getOptions = () => {\r\n    return [\r\n      {\r\n        displayValue: \"Highest dividend yield 2020\",\r\n        value: \"dividendyieldcurrentyear\",\r\n      },\r\n      {\r\n        displayValue: \"Highest dividend yield overall\",\r\n        value: \"dividendyieldoverall\",\r\n      },\r\n    ];\r\n  };\r\n\r\n  const setStocksByDividendYieldOverall = () => {\r\n    const sorted = sortStocksByCompoundedYield(stocks);\r\n    setStocks(sorted);\r\n  };\r\n\r\n  const setStocksByDividendYieldCurrentYear = () => {\r\n    const sorted = sortStocksByDividendYield(stocks);\r\n    setStocks(sorted);\r\n  };\r\n\r\n  const onSelectChange = (e) => {\r\n    const descriptor = e.target.value;\r\n\r\n    if (descriptor === \"dividendyieldoverall\") {\r\n      setStocksByDividendYieldOverall();\r\n    } else if (descriptor === \"dividendyieldcurrentyear\") {\r\n      setStocksByDividendYieldCurrentYear();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.header}>\r\n        <h1 className={styles.heading}>Oslo Exchange</h1>\r\n        <Select\r\n          options={getOptions()}\r\n          onChange={onSelectChange}\r\n          className={styles.select}\r\n        />\r\n      </div>\r\n\r\n      <div className={styles.listContainer}>\r\n        <div className={styles.listHeaders}>\r\n          <div className={styles.nameHeader}>Name</div>\r\n          <div className={styles.tickerHeader}>Ticker</div>\r\n          <div className={styles.askHeader}>Ask</div>\r\n          <div className={styles.bidHeader}>Bid</div>\r\n          <div className={styles.dpsHeader}>Dividend p/s</div>\r\n          <div className={styles.dpspentHeader}>Dividend per 1000 spent</div>\r\n          <div className={styles.peHeader}>P/E</div>\r\n          <div className={styles.sectorHeader}>Sector</div>\r\n        </div>\r\n        <ul className={styles.stockList}>{renderListItems()}</ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}