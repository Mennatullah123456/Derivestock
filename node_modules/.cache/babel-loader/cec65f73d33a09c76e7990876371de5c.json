{"ast":null,"code":"var _jsxFileName = \"E:\\\\New folder (6)\\\\shtock\\\\src\\\\pages\\\\StockView\\\\StockView.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, Route, useRouteMatch } from \"react-router-dom\";\nimport { ConditionallyRender } from \"react-util-kit\";\nimport Header from \"../../components/Header/Header\";\nimport Subheader from \"../../components/Subheader/Subheader\";\nimport StockInfo from \"../../components/StockInfo/StockInfo\";\nimport Highlights from \"../../components/Highlights/Highlights\";\nimport Resources from \"../../components/Resources/Resources\";\nimport StockViewMenu from \"../../components/StockViewMenu/StockViewMenu\";\nimport Dividend from \"./Dividend/Dividend\";\nimport Research from \"./Research/Research\";\nimport Layout from \"../../components/Layout/Layout\";\nimport { sortStocksByDividendYield } from \"../../helpers\";\nconst initialObject = {\n  name: \"\",\n  ticker: \"\",\n  bid: 0,\n  ask: 0,\n  sector: \"\",\n  change: 0,\n  dividends: {},\n  homepage: \"\",\n  investorpage: \"\",\n  pe: 0,\n  research: []\n};\nconst StockView = _ref => {\n  let {\n    stocks\n  } = _ref;\n  const match = useRouteMatch();\n  const {\n    ticker\n  } = useParams();\n  const [stock, setStock] = useState(initialObject);\n  useEffect(() => {\n    const getData = () => {\n      if (stocks.length === 0) return;\n      const stock = stocks.find(stock => stock.ticker === ticker);\n      setStock(stock);\n    };\n    getData();\n  }, [stocks, ticker]);\n  const getCurrentYearDividendYieldRating = stocks => {\n    const sorted = sortStocksByDividendYield(stocks);\n    let ranking;\n    sorted.forEach((stockItem, index) => {\n      if (stockItem.ticker === stock.ticker) {\n        ranking = index + 1;\n      }\n    });\n    return ranking;\n  };\n  const setResearch = researchObject => {\n    setStock(prev => ({\n      ...prev,\n      research: [...prev.research, researchObject]\n    }));\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Subheader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ConditionallyRender, {\n    ifTrue: stock,\n    show: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StockInfo, {\n      stock: stock,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Highlights, {\n      stock: stock,\n      stocks: stocks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Resources, {\n      homepage: stock.homepage,\n      investorpage: stock.investorpage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(StockViewMenu, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: match.url,\n    render: () => /*#__PURE__*/React.createElement(Dividend, {\n      stock: stock,\n      ranking: getCurrentYearDividendYieldRating(stocks),\n      stocks: stocks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.url}/research`,\n    render: () => /*#__PURE__*/React.createElement(Research, {\n      research: stock.research,\n      setResearch: setResearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  })));\n};\nexport default StockView;","map":{"version":3,"names":["React","useEffect","useState","useParams","Route","useRouteMatch","ConditionallyRender","Header","Subheader","StockInfo","Highlights","Resources","StockViewMenu","Dividend","Research","Layout","sortStocksByDividendYield","initialObject","name","ticker","bid","ask","sector","change","dividends","homepage","investorpage","pe","research","StockView","_ref","stocks","match","stock","setStock","getData","length","find","getCurrentYearDividendYieldRating","sorted","ranking","forEach","stockItem","index","setResearch","researchObject","prev","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ifTrue","show","exact","path","url","render"],"sources":["E:/New folder (6)/shtock/src/pages/StockView/StockView.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useParams, Route, useRouteMatch } from \"react-router-dom\";\r\nimport { ConditionallyRender } from \"react-util-kit\";\r\n\r\nimport Header from \"../../components/Header/Header\";\r\nimport Subheader from \"../../components/Subheader/Subheader\";\r\nimport StockInfo from \"../../components/StockInfo/StockInfo\";\r\nimport Highlights from \"../../components/Highlights/Highlights\";\r\nimport Resources from \"../../components/Resources/Resources\";\r\nimport StockViewMenu from \"../../components/StockViewMenu/StockViewMenu\";\r\nimport Dividend from \"./Dividend/Dividend\";\r\nimport Research from \"./Research/Research\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\n\r\nimport { sortStocksByDividendYield } from \"../../helpers\";\r\n\r\nconst initialObject = {\r\n  name: \"\",\r\n  ticker: \"\",\r\n  bid: 0,\r\n  ask: 0,\r\n  sector: \"\",\r\n  change: 0,\r\n  dividends: {},\r\n  homepage: \"\",\r\n  investorpage: \"\",\r\n  pe: 0,\r\n  research: [],\r\n};\r\n\r\nconst StockView = ({ stocks }) => {\r\n  const match = useRouteMatch();\r\n  const { ticker } = useParams();\r\n  const [stock, setStock] = useState(initialObject);\r\n\r\n  useEffect(() => {\r\n    const getData = () => {\r\n      if (stocks.length === 0) return;\r\n      const stock = stocks.find((stock) => stock.ticker === ticker);\r\n      setStock(stock);\r\n    };\r\n\r\n    getData();\r\n  }, [stocks, ticker]);\r\n\r\n  const getCurrentYearDividendYieldRating = (stocks) => {\r\n    const sorted = sortStocksByDividendYield(stocks);\r\n    let ranking;\r\n\r\n    sorted.forEach((stockItem, index) => {\r\n      if (stockItem.ticker === stock.ticker) {\r\n        ranking = index + 1;\r\n      }\r\n    });\r\n\r\n    return ranking;\r\n  };\r\n\r\n  const setResearch = (researchObject) => {\r\n    setStock((prev) => ({\r\n      ...prev,\r\n      research: [...prev.research, researchObject],\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Subheader>\r\n        <ConditionallyRender\r\n          ifTrue={stock}\r\n          show={\r\n            <>\r\n              <StockInfo stock={stock} />\r\n              <Highlights stock={stock} stocks={stocks} />\r\n              <Resources\r\n                homepage={stock.homepage}\r\n                investorpage={stock.investorpage}\r\n              />\r\n              <StockViewMenu />\r\n            </>\r\n          }\r\n        />\r\n      </Subheader>\r\n      <Layout>\r\n        <Route\r\n          exact\r\n          path={match.url}\r\n          render={() => (\r\n            <Dividend\r\n              stock={stock}\r\n              ranking={getCurrentYearDividendYieldRating(stocks)}\r\n              stocks={stocks}\r\n            />\r\n          )}\r\n        />\r\n\r\n        <Route\r\n          path={`${match.url}/research`}\r\n          render={() => (\r\n            <Research research={stock.research} setResearch={setResearch} />\r\n          )}\r\n        />\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StockView;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}