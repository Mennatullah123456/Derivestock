{"ast":null,"code":"var _jsxFileName = \"E:\\\\New folder (6)\\\\shtock\\\\src\\\\pages\\\\Dashboard\\\\Dashboard.jsx\";\nimport React from \"react\";\nimport { ConditionallyRender } from \"react-util-kit\";\nimport Header from \"../../components/Header/Header\";\nimport Subheader from \"../../components/Subheader/Subheader\";\nimport ExchangeList from \"../../components/ExchangeList/ExchangeList\";\nimport TopFiveDividendStocksList from \"../../components/TopFiveDividendStocksList/TopFiveDividendStocksList\";\nimport InfoCard from \"../../components/InfoCard/InfoCard\";\nimport StockList from \"../../components/StockList/StockList\";\nimport Layout from \"../../components/Layout/Layout\";\nimport { getTopFiveDividendStocks, getInfoCardData } from \"./helpers\";\nimport styles from \"./Dashboard.module.css\";\nconst Dashboard = _ref => {\n  let {\n    exchanges,\n    stocks,\n    setStocks\n  } = _ref;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Subheader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ExchangeList, {\n    exchanges: exchanges,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TopFiveDividendStocksList, {\n    stocks: getTopFiveDividendStocks(stocks),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.infoCardContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InfoCard, {\n    title: \"Highest dividend yield in current year\",\n    stock: getInfoCardData(\"yieldcurrent\", stocks),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(InfoCard, {\n    title: \"Highest dividend yield all time\",\n    stock: getInfoCardData(\"yieldcompounded\", stocks),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(InfoCard, {\n    title: \"Highest dividend yield growth in past 3 years\",\n    stock: getInfoCardData(\"growth\", stocks),\n    darkmode: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ConditionallyRender, {\n    ifTrue: stocks.length,\n    show: /*#__PURE__*/React.createElement(StockList, {\n      stocks: stocks,\n      setStocks: setStocks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })));\n};\nexport default Dashboard;","map":{"version":3,"names":["React","ConditionallyRender","Header","Subheader","ExchangeList","TopFiveDividendStocksList","InfoCard","StockList","Layout","getTopFiveDividendStocks","getInfoCardData","styles","Dashboard","_ref","exchanges","stocks","setStocks","createElement","Fragment","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","infoCardContainer","title","stock","darkmode","ifTrue","length","show"],"sources":["E:/New folder (6)/shtock/src/pages/Dashboard/Dashboard.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nimport { ConditionallyRender } from \"react-util-kit\";\r\n\r\nimport Header from \"../../components/Header/Header\";\r\nimport Subheader from \"../../components/Subheader/Subheader\";\r\nimport ExchangeList from \"../../components/ExchangeList/ExchangeList\";\r\nimport TopFiveDividendStocksList from \"../../components/TopFiveDividendStocksList/TopFiveDividendStocksList\";\r\nimport InfoCard from \"../../components/InfoCard/InfoCard\";\r\nimport StockList from \"../../components/StockList/StockList\";\r\nimport Layout from \"../../components/Layout/Layout\";\r\n\r\nimport { getTopFiveDividendStocks, getInfoCardData } from \"./helpers\";\r\n\r\nimport styles from \"./Dashboard.module.css\";\r\n\r\nconst Dashboard = ({ exchanges, stocks, setStocks }) => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Subheader>\r\n        <ExchangeList exchanges={exchanges} />\r\n        <TopFiveDividendStocksList stocks={getTopFiveDividendStocks(stocks)} />\r\n        <div className={styles.infoCardContainer}>\r\n          <InfoCard\r\n            title=\"Highest dividend yield in current year\"\r\n            stock={getInfoCardData(\"yieldcurrent\", stocks)}\r\n          />\r\n          <InfoCard\r\n            title=\"Highest dividend yield all time\"\r\n            stock={getInfoCardData(\"yieldcompounded\", stocks)}\r\n          />\r\n          <InfoCard\r\n            title=\"Highest dividend yield growth in past 3 years\"\r\n            stock={getInfoCardData(\"growth\", stocks)}\r\n            darkmode\r\n          />\r\n        </div>\r\n      </Subheader>\r\n\r\n      <Layout>\r\n        <ConditionallyRender\r\n          ifTrue={stocks.length}\r\n          show={<StockList stocks={stocks} setStocks={setStocks} />}\r\n        />\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}